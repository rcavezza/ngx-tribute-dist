{"version":3,"sources":["ng://ngx-tribute/lib/ngx-tribute.directive.ts","ng://ngx-tribute/lib/ngx-tribute.module.ts"],"names":["NgxTributeDirective","element","formControlName","formControlDirective","ngModelDirective","this","EventEmitter","Object","defineProperty","prototype","implicitFormControl","control","ngOnInit","_this","tribute","Tribute","options","attach","nativeElement","addEventListener","value","includes","tagName","innerHTML","onMentioned","emit","setValue","Directive","args","selector","exportAs","ElementRef","FormControlName","decorators","type","Optional","FormControlDirective","NgModel","Input","Output","NgxTributeModule","NgModule","imports","declarations","exports"],"mappings":"qaAoBI,SAAAA,EACYC,EACYC,EACAC,EACAC,GAHZC,KAAAJ,QAAAA,EACYI,KAAAH,gBAAAA,EACAG,KAAAF,qBAAAA,EACAE,KAAAD,iBAAAA,mBARV,IAAIE,EAAAA,oBAWlBC,OAAAC,eAAIR,EAAAS,UAAA,UAAO,KAAX,WACI,OAAOJ,KAAKK,qBACPL,KAAKH,iBAAmBG,KAAKH,gBAAgBS,SAC7CN,KAAKF,sBAAwBE,KAAKF,qBAAqBQ,SACvDN,KAAKD,kBAAoBC,KAAKD,iBAAiBO,yCAGxDX,EAAAS,UAAAG,SAAA,WAAA,IAAAC,EAAAR,KACIA,KAAKS,QAAU,IAAIC,EAAQV,KAAKW,SAChCX,KAAKS,QAAQG,OAAOZ,KAAKJ,QAAQiB,eAEjCb,KAAKJ,QAAQiB,cAAcC,iBAAiB,mBAAoB,WAC5D,IAAMC,EAAQ,CAAC,QAAS,YAAYC,SAChCR,EAAKZ,QAAQiB,cAAcI,SAEzBT,EAAKZ,QAAQiB,cAAcE,MAC3BP,EAAKZ,QAAQiB,cAAcK,UAEjCV,EAAKW,YAAYC,KAAKL,GAElBP,EAAKF,SACLE,EAAKF,QAAQe,SAASN,0BA5CrCO,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,eACVC,SAAU,2DANKC,EAAAA,kBACwBC,EAAAA,gBAAeC,WAAA,CAAA,CAAAC,KAqBjDC,EAAAA,kBArBYC,EAAAA,qBAAoBH,WAAA,CAAA,CAAAC,KAsBhCC,EAAAA,kBAtBmDE,EAAAA,QAAOJ,WAAA,CAAA,CAAAC,KAuB1DC,EAAAA,+CAfJG,EAAAA,MAAKV,KAAA,CAAC,2CAGNU,EAAAA,2BAGAC,EAAAA,eCfLC,EAAA,oDAGCC,EAAAA,SAAQb,KAAA,CAAC,CACRc,QAAS,GAETC,aAAc,CAAC3C,GACf4C,QAAS,CAAC5C,SAPZ","sourcesContent":["import {Directive, ElementRef, EventEmitter, Input, OnInit, Optional, Output} from '@angular/core';\nimport {FormControl, FormControlDirective, FormControlName, NgModel} from '@angular/forms';\nimport Tribute, {TributeOptions} from 'tributejs';\n\n@Directive({\n    selector: '[ngxTribute]',\n    exportAs: 'ngx-tribute'\n})\nexport class NgxTributeDirective<T> implements OnInit {\n    @Input('ngxTribute')\n    options: TributeOptions<T>;\n\n    @Input()\n    implicitFormControl: FormControl;\n\n    @Output()\n    onMentioned = new EventEmitter<string>();\n\n    tribute: Tribute<T>;\n\n    constructor(\n        private element: ElementRef,\n        @Optional() private formControlName: FormControlName,\n        @Optional() private formControlDirective: FormControlDirective,\n        @Optional() private ngModelDirective: NgModel\n    ) {}\n\n    get control(): FormControl {\n        return this.implicitFormControl ||\n            (this.formControlName && this.formControlName.control) ||\n            (this.formControlDirective && this.formControlDirective.control) ||\n            (this.ngModelDirective && this.ngModelDirective.control);\n    }\n\n    ngOnInit() {\n        this.tribute = new Tribute(this.options);\n        this.tribute.attach(this.element.nativeElement);\n\n        this.element.nativeElement.addEventListener('tribute-replaced', () => {\n            const value = ['INPUT', 'TEXTAREA'].includes(\n                this.element.nativeElement.tagName\n            )\n                ? this.element.nativeElement.value\n                : this.element.nativeElement.innerHTML;\n\n            this.onMentioned.emit(value);\n\n            if (this.control) {\n                this.control.setValue(value);\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport {NgxTributeDirective} from './ngx-tribute.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxTributeDirective],\n  exports: [NgxTributeDirective]\n})\nexport class NgxTributeModule { }\n"]}