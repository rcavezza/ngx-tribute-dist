{"version":3,"file":"ngx-tribute.umd.js.map","sources":["ng://ngx-tribute/lib/ngx-tribute.directive.ts","ng://ngx-tribute/lib/ngx-tribute.module.ts"],"sourcesContent":["import {Directive, ElementRef, EventEmitter, Input, OnInit, Optional, Output} from '@angular/core';\nimport {FormControl, FormControlDirective, FormControlName, NgModel} from '@angular/forms';\nimport Tribute, {TributeOptions} from 'tributejs';\n\n@Directive({\n    selector: '[ngxTribute]',\n    exportAs: 'ngx-tribute'\n})\nexport class NgxTributeDirective<T> implements OnInit {\n    @Input('ngxTribute')\n    options: TributeOptions<T>;\n\n    @Input()\n    implicitFormControl: FormControl;\n\n    @Output()\n    onMentioned = new EventEmitter<string>();\n\n    tribute: Tribute<T>;\n\n    constructor(\n        private element: ElementRef,\n        @Optional() private formControlName: FormControlName,\n        @Optional() private formControlDirective: FormControlDirective,\n        @Optional() private ngModelDirective: NgModel\n    ) {}\n\n    get control(): FormControl {\n        return this.implicitFormControl ||\n            (this.formControlName && this.formControlName.control) ||\n            (this.formControlDirective && this.formControlDirective.control) ||\n            (this.ngModelDirective && this.ngModelDirective.control);\n    }\n\n    ngOnInit() {\n        this.tribute = new Tribute(this.options);\n        this.tribute.attach(this.element.nativeElement);\n\n        this.element.nativeElement.addEventListener('tribute-replaced', () => {\n            const value = ['INPUT', 'TEXTAREA'].includes(\n                this.element.nativeElement.tagName\n            )\n                ? this.element.nativeElement.value\n                : this.element.nativeElement.innerHTML;\n\n            this.onMentioned.emit(value);\n\n            if (this.control) {\n                this.control.setValue(value);\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport {NgxTributeDirective} from './ngx-tribute.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxTributeDirective],\n  exports: [NgxTributeDirective]\n})\nexport class NgxTributeModule { }\n"],"names":["EventEmitter","Directive","ElementRef","FormControlName","Optional","FormControlDirective","NgModel","Input","Output","NgModule"],"mappings":";;;;;;;;;;;;AAAA;;;;QAoBI,6BACY,SACY,eAAgC,EAChC,oBAA0C,EAC1C,gBAAyB;YAHrC,YAAO,GAAP,OAAO;YACK,oBAAe,GAAf,eAAe,CAAiB;YAChC,yBAAoB,GAApB,oBAAoB,CAAsB;YAC1C,qBAAgB,GAAhB,gBAAgB,CAAS;+BARnC,IAAIA,iBAAY,EAAU;SASpC;QAEJ,sBAAI,wCAAO;;;gBAAX;gBACI,OAAO,IAAI,CAAC,mBAAmB;qBAC1B,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;qBACrD,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;qBAC/D,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;aAChE;;;WAAA;;;;QAED,sCAAQ;;;YAAR;gBAAA,iBAiBC;gBAhBG,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gBAEhD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;;oBAC5D,IAAM,KAAK,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,QAAQ,CACxC,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CACrC;0BACK,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK;0BAChC,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC;oBAE3C,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE7B,IAAI,KAAI,CAAC,OAAO,EAAE;wBACd,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBAChC;iBACJ,CAAC,CAAC;aACN;;oBA/CJC,cAAS,SAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,aAAa;qBAC1B;;;;;wBAPkBC,eAAU;wBACcC,qBAAe,uBAqBjDC,aAAQ;wBArBIC,0BAAoB,uBAsBhCD,aAAQ;wBAtB2CE,aAAO,uBAuB1DF,aAAQ;;;;8BAfZG,UAAK,SAAC,YAAY;0CAGlBA,UAAK;kCAGLC,WAAM;;kCAfX;;;;;;;ACAA;;;;oBAGCC,aAAQ,SAAC;wBACR,OAAO,EAAE,EACR;wBACD,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBAC/B;;+BARD;;;;;;;;;;;;;;;;;;;;;;;;"}
