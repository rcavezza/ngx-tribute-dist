!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("tributejs")):"function"==typeof define&&define.amd?define("ngx-tribute",["exports","@angular/core","@angular/forms","tributejs"],t):t(e["ngx-tribute"]={},e.ng.core,e.ng.forms,null)}(this,function(e,n,t,r){"use strict";r=r&&r.hasOwnProperty("default")?r["default"]:r;var o=function(){function e(e,t,r,o){this.element=e,this.formControlName=t,this.formControlDirective=r,this.ngModelDirective=o,this.onMentioned=new n.EventEmitter}return Object.defineProperty(e.prototype,"control",{get:function(){return this.implicitFormControl||this.formControlName&&this.formControlName.control||this.formControlDirective&&this.formControlDirective.control||this.ngModelDirective&&this.ngModelDirective.control},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var t=this;this.tribute=new r(this.options),this.tribute.attach(this.element.nativeElement),this.element.nativeElement.addEventListener("tribute-replaced",function(){var e=["INPUT","TEXTAREA"].includes(t.element.nativeElement.tagName)?t.element.nativeElement.value:t.element.nativeElement.innerHTML;t.onMentioned.emit(e),t.control&&t.control.setValue(e)})},e.decorators=[{type:n.Directive,args:[{selector:"[ngxTribute]",exportAs:"ngx-tribute"}]}],e.ctorParameters=function(){return[{type:n.ElementRef},{type:t.FormControlName,decorators:[{type:n.Optional}]},{type:t.FormControlDirective,decorators:[{type:n.Optional}]},{type:t.NgModel,decorators:[{type:n.Optional}]}]},e.propDecorators={options:[{type:n.Input,args:["ngxTribute"]}],implicitFormControl:[{type:n.Input}],onMentioned:[{type:n.Output}]},e}(),i=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[],declarations:[o],exports:[o]}]}],e}();e.NgxTributeModule=i,e.NgxTributeDirective=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-tribute.umd.min.js.map